<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title> - rstats</title>
		<description>rstats posts</description>
		<link>http://lionel-.github.io</link>
		<atom:link href="http://lionel-.github.io/rss-rstats.xml" rel="self" type="application/rss+xml" />
    <lastBuildDate>Fri, 09 Oct 2015 13:22:26 +0200</lastBuildDate>
    <pubDate>Fri, 09 Oct 2015 13:22:26 +0200</pubDate>

		
			<item>
				<title>Using purrr with dplyr</title>
				
					<description>&lt;p&gt;&lt;code&gt;purrr&lt;/code&gt; was finally
&lt;a href=&quot;http://blog.rstudio.org/2015/09/29/purrr-0-1-0/&quot;&gt;released&lt;/a&gt; on CRAN
last week. This package is focused on working with lists (and data
frames by the same token). However it is not a DSL for lists in the
way dplyr is a DSL for data frames. It aims at creating a &amp;quot;better
standard lib&amp;quot; focused on functional programming. Purrr should feel
like R programming and bring out the elegance of the language. That
said, purrr can be a nice companion to your dplyr pipelines especially
when you need to apply a function to many columns. In this post I show
how purrr&amp;#39;s functional tools can be applied to a dplyr workflow.&lt;/p&gt;
</description>
				
				<pubDate>Thu, 08 Oct 2015 00:00:00 +0200</pubDate>
				<link>http://lionel-.github.io/2015/10/08/using-purrr-with-dplyr</link>
				<guid isPermaLink="true">http://lionel-.github.io/2015/10/08/using-purrr-with-dplyr</guid>
			</item>
		
	</channel>
</rss>
